SELECT * FROM BOOK;
SELECT * FROM PATRON;
SELECT * FROM EMPLOYEE;
SELECT * FROM BRANCH;
SELECT * FROM LOAN;
SELECT * FROM HOLD;

alter table loan
change start_date start_date DATE;

SELECT TIMESTAMPDIFF(YEAR, (select DOB from employee where emp_id = 1), CURDATE()) AS age


select current_timestamp() as td;

SELECT UNIX_TIMESTAMP() - UNIX_TIMESTAMP('2019-08-23 13:05:00');

select branch_name from branch
where branch.branch_id in (
	select branch_id from book
	where id = 21827185
);

select book.id, book.author, book.title, branch.branch_name from book
left join branch on book.branch_id = branch.branch_id;
order by book.title;

select book.id, book.branch_id, branch.branch_id, branch.branch_name from book
left join branch on book.branch_id = branch.branch_id
order by book.title;

CREATE TABLE BOOK (
	ID BIGINT PRIMARY KEY,
    COVER_URL VARCHAR(100),
    TITLE VARCHAR (150),
    AUTHOR VARCHAR(100),
    CATEGORY VARCHAR(50),
    BRANCH_ID INT,
    AVAILABLE BOOLEAN NOT NULL
);

CREATE TABLE PATRON (
	USERNAME VARCHAR(40) PRIMARY KEY,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    EMAIL VARCHAR (40),
    PASSWORD VARCHAR (20),
    DOB DATE
);

CREATE TABLE LOAN (
	BOOK_ID BIGINT,
    PATRON_USERNAME VARCHAR (40),
    START_DATE DATETIME,
    DUE_DATE DATETIME,
    FINE DECIMAL (6,2),
    PRIMARY KEY(BOOK_ID),
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE,
	FOREIGN KEY(PATRON_USERNAME) REFERENCES PATRON(USERNAME) ON DELETE SET NULL
);



CREATE TABLE HOLD (
	BOOK_ID BIGINT,
    PATRON_USERNAME VARCHAR (40),
    START_DATE DATE,
    PRIMARY KEY (BOOK_ID, PATRON_USERNAME),
    FOREIGN KEY(BOOK_ID) REFERENCES BOOK(ID) ON DELETE CASCADE,
    FOREIGN KEY(PATRON_USERNAME) REFERENCES PATRON(USERNAME) ON DELETE CASCADE
);

CREATE TABLE EMPLOYEE (
  EMP_ID INT PRIMARY KEY,
  FIRST_NAME VARCHAR(40),
  LAST_NAME VARCHAR(40),
  DOB DATE,
  SEX VARCHAR(1),
  SALARY INT,
  SUPER_ID INT,
  BRANCH_ID INT
);

ALTER TABLE EMPLOYEE
ADD FOREIGN KEY(SUPER_ID)
REFERENCES EMPLOYEE(EMP_ID)
ON DELETE SET NULL;

CREATE TABLE BRANCH (
  BRANCH_ID INT PRIMARY KEY,
  BRANCH_NAME VARCHAR(40),
  ADDRESS VARCHAR (40),
  MGR_ID INT,
  FOREIGN KEY(MGR_ID) REFERENCES EMPLOYEE(EMP_ID) ON DELETE SET NULL
);


ALTER TABLE EMPLOYEE
ADD FOREIGN KEY(BRANCH_ID)
REFERENCES BRANCH(BRANCH_ID)
ON DELETE SET NULL;

ALTER TABLE book
ADD FOREIGN KEY(BRANCH_ID)
REFERENCES branch(BRANCH_ID)
ON DELETE SET NULL;
